directive @auth on FIELD_DEFINITION
directive @hasRole(role: Role!) on FIELD_DEFINITION

enum Role {
  admin
  seller
  user
}
type Query {
  users: [User!]!
  user(id: ID!): User! @auth
  products: [Product!]!
  product(id: ID!): Product!
  orders: [Order!]!
  order(id: ID!): Order! @auth
}

type Mutation {
  registerUser(input: RegisterInput!): User!
  createProduct(input: ProductInput!, id: ID!): Product!
    @hasRole(role: admin)
    @auth

  placeOrder(input: OrderInput!, id: ID!): Order! @auth
  login(input: LoginInput): User!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  role: String!
}

type Product {
  id: ID!
  name: String!
  quantity: Int!
  sellerID: ID!
  sellerFirstName: String!
  sellerLastName: String!
}

type Order {
  id: ID!
  productID: ID!
  productName: String!
  userID: ID!
  quantity: Int!
  userFirstName: String!
  userLastName: String!
  role: String!
}

input RegisterInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  role: String!
}

input ProductInput {
  name: String!
  quantity: Int!
  sellerID: ID!
}

input OrderInput {
  userID: ID!
  productID: ID!
  quantity: Int!
}

input LoginInput {
  email: String!
  password: String!
}
